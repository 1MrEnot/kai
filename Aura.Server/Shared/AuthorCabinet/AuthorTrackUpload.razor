@inject ApplicationDbContext _dbContext;
@inject AuthorService _authorService;

<EditForm Model="_trackModel" OnValidSubmit="CreateTrack">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <p>
        <label>
            Обложка
            <InputFile OnChange="UploadCover"></InputFile>
        </label>
    </p>

    <p>
        <label>
            Трек
            <InputFile OnChange="UploadTrack"></InputFile>
        </label>
    </p>

    <p>
        <label>
            Название трека
            <InputText id="filename" @bind-Value="_trackModel.Name" />
        </label>
    </p>

    <button class="btn-outline-primary" type="submit">Загрузить трек</button>

</EditForm>



@code {

    private AuthorProfileModel _author;
    private TrackModel _trackModel = new();

    protected override void OnInitialized()
    {
        _author = _authorService.GetAsAuthor();
    }

    private async Task UploadCover(InputFileChangeEventArgs args)
    {
        _trackModel.Cover = await FileToByteArray(args.File);
    }

    private async Task UploadTrack(InputFileChangeEventArgs args)
    {
        _trackModel.Track = await FileToByteArray(args.File);
    }

    private async Task CreateTrack()
    {
        var author = await _dbContext.Authors.FindAsync(_author.Id);
        var track = new Track
        {
            Id = Guid.NewGuid(),
            File = _trackModel.Track,
            Name = _trackModel.Name,
            ReleaseDate = DateTime.Today,
            Author = author
        };
        _dbContext.Tracks.Add(track);

        await _dbContext.SaveChangesAsync();
    }

    private async Task<byte[]> FileToByteArray(IBrowserFile file)
    {
        await using var memoryStream = new MemoryStream();
        var fileSteam = file.OpenReadStream(8*1024*1024*100);
        await fileSteam.CopyToAsync(memoryStream);
        return memoryStream.ToArray();
    }

    private class TrackModel
    {
        [Required]
        public string Name { get; set; }

        [Required]
        public byte[] Cover { get; set; }

        [Required]
        public byte[] Track { get; set; }
    }
}